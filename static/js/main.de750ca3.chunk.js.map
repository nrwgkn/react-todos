{"version":3,"sources":["components/Head.jsx","components/List.jsx","components/Form.jsx","components/Body.jsx","App.js","reportWebVitals.js","index.js"],"names":["Head","className","List","deleteTodo","putTodo","todos","map","todo","check","body","onClick","id","Form","addTodo","useState","inputText","setInputText","type","value","onChange","e","target","Body","setTodos","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","text","Math","random","toString","substring","newTodos","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAMeA,G,MAJF,WACX,OAAO,oBAAIC,UAAU,YAAd,wB,cCuCMC,EAxCF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MASnC,OACE,oBAAIJ,UAAU,YAAd,SACGI,EAAMC,KAAI,SAACC,GACV,OACE,qBAAIN,UAAU,YAAd,UAEQM,EAAKC,MACA,mBAAGP,UAAU,oBAAb,SAAkCM,EAAKE,OAEvC,mBAAGR,UAAU,YAAb,SAA0BM,EAAKE,OAG1C,yBACER,UAAU,mBACVS,QAAS,kBAlBGC,EAkBkBJ,EAAKI,QAjB7CP,EAAQO,GADa,IAACA,GAgBd,gBAIK,mBAAGV,UAAU,2BAElB,yBACEA,UAAU,sBACVS,QAAS,kBA5BMC,EA4BkBJ,EAAKI,QA3BhDR,EAAWQ,GADa,IAACA,GA0BjB,mBAIQ,mBAAGV,UAAU,sBAlBQM,EAAKI,UCQ/BC,EArBF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACMC,mBAAS,IADf,mBACrBC,EADqB,KACVC,EADU,KAO5B,OACE,sBAAKf,UAAU,YAAf,UACE,uBACEgB,KAAK,OACLC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAaI,EAAEC,OAAOH,UAEzC,wBAAQjB,UAAU,MAAMS,QAZL,WACrBG,EAAQE,GACRC,EAAa,KAUX,wBCmCSM,EA/CF,WAAO,IAAD,EACSR,mBAAS,IADlB,mBACVT,EADU,KACHkB,EADG,KAqCjB,OARAC,qBAAU,WACRD,EAASE,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MACvD,IAEHJ,qBAAU,WACRG,aAAaE,QAAQ,UAAWJ,KAAKK,UAAUzB,MAC9C,CAACA,IAGF,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAMY,QArCI,SAACkB,GACfR,EAAS,GAAD,mBACHlB,GADG,CAEN,CACEM,GAAIqB,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACzC1B,KAAMsB,EACNvB,OAAO,SAgCP,cAAC,EAAD,CAAML,WA3BO,SAACQ,GAClB,IAAMyB,EAAW/B,EAAMgC,QAAO,SAAC9B,GAAD,OAAUA,EAAKI,KAAOA,KACpDY,EAASa,IAyByBhC,QAtBpB,SAACO,GACf,IAAMyB,EAAW/B,EAAMC,KAAI,SAACC,GAI1B,OAHIA,EAAKI,KAAOA,IACdJ,EAAKC,OAASD,EAAKC,OAEdD,KAETgB,EAASa,IAe2C/B,MAAOA,U,MChChDiC,MATf,WACE,OACE,sBAAKrC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.de750ca3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Head = () => {\n  return <h1 className=\"task-head\">Todo App</h1>;\n};\n\nexport default Head;\n","import React from \"react\";\n\nconst List = ({ deleteTodo, putTodo, todos }) => {\n  const handleDeleteClick = (id) => {\n    deleteTodo(id);\n  };\n\n  const handlePutClick = (id) => {\n    putTodo(id);\n  };\n\n  return (\n    <ul className=\"task-list\">\n      {todos.map((todo) => {\n        return (\n          <li className=\"task-item\" key={todo.id}>\n            {(() => {\n              if (todo.check) {\n                return <p className=\"task-text is-done\">{todo.body}</p>;\n              } else {\n                return <p className=\"task-text\">{todo.body}</p>;\n              }\n            })()}\n            <button\n              className=\"btn task-btn put\"\n              onClick={() => handlePutClick(todo.id)}\n            >\n              put<i className=\"far fa-check-circle\"></i>\n            </button>\n            <button\n              className=\"btn task-btn delete\"\n              onClick={() => handleDeleteClick(todo.id)}\n            >\n              delete<i className=\"fas fa-trash\"></i>\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n","import React, { useState } from \"react\";\n\nconst Form = ({ addTodo }) => {\n  const [inputText, setInputText] = useState(\"\");\n  const handleClickAdd = () => {\n    addTodo(inputText);\n    setInputText(\"\");\n  };\n\n  return (\n    <div className=\"task-form\">\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      <button className=\"btn\" onClick={handleClickAdd}>\n        submit\n      </button>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useEffect, useState } from \"react\";\nimport List from \"./List\";\nimport Form from \"./Form\";\n\nconst Body = () => {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (text) => {\n    setTodos([\n      ...todos,\n      {\n        id: Math.random().toString(32).substring(2),\n        body: text,\n        check: false,\n      },\n    ]);\n  };\n\n  const deleteTodo = (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n  };\n\n  const putTodo = (id) => {\n    const newTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.check = !todo.check;\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  useEffect(() => {\n    setTodos(JSON.parse(localStorage.getItem(\"myTodos\")) || []);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"myTodos\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div className=\"task-body\">\n      <div className=\"container\">\n        <Form addTodo={addTodo} />\n        <List deleteTodo={deleteTodo} putTodo={putTodo} todos={todos} />\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n","import Head from \"./components/Head\";\nimport Body from \"./components/Body\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Head />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}